{"version":3,"sources":["Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Container/Container.js","redux/contacts-action.js","redux/contacts-selection.js","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Contacts/Contacts.module.css"],"names":["module","exports","Container","children","className","styles","exportedObject","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","ChangeFilter","getContacts","state","contacts","items","connect","dispatch","onSubmit","contactsAction","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","target","value","reset","preventDefault","some","contact","alert","style","form","type","pattern","title","onChange","required","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteContact","list","map","item","text","onClick","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cafb4dbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__efa-N\",\"button\":\"Form_button__1k1zl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__rwvju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1uJR9\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nconst deleteContact = createAction('contacts/delete');\nconst ChangeFilter = createAction('contacts/changeFilter');\n\nconst exportedObject = {\n  addContact,\n  deleteContact,\n  ChangeFilter,\n};\n\nexport default exportedObject;\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport style from './Form.module.css';\nimport { connect } from 'react-redux';\nimport contactsAction from '../redux/contacts-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../redux/contacts-selection';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(contactsAction.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handelSubmit} className={style.form}>\n      <label>\n        <span>Name</span>\n        <input\n          id={shortid.generate()}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label>\n        <span>Number</span>\n        <input\n          id={shortid.generate()}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import style from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsAction from '../redux/contacts-action';\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul className={style.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={style.item}>\n        <p className={style.text}>{name}:</p>\n        <span>{number}</span>\n        <button className={style.button} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import style from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsAction from '../redux/contacts-action';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <p className={style.text}>Find contacts by name</p>\n    <input type=\"text\" value={value} onChange={onChange}></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsAction.ChangeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Container from './Container';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport Filter from './Filter';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.ChangeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst exportedObject = {\n  store,\n  persistor,\n};\n\nexport default exportedObject;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\nimport {} from './redux/contacts-types';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2b0Ss\",\"item\":\"Contacts_item__13AKG\",\"text\":\"Contacts_text__18i6n\",\"button\":\"Contacts_button__3slL8\"};"],"sourceRoot":""}